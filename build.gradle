plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.5'
    id 'org.beryx.jlink' version '2.1.9'
    id "com.github.breadmoirai.github-release" version "2.2.9"
}

group 'com.github.samuele0.markdownoffice'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
    compile group: 'com.google.inject', name: 'guice', version: '4.2.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
    compile project(":plugins")
}
javafx {
    modules = ['javafx.controls', 'javafx.fxml']
}
mainClassName = "markdownoffice/com.github.samuele0.markdownoffice.MyApp"

jlink {
    imageZip = project.file("${buildDir}/distributions/MarkDown-Office-${System.properties['os.detected.name']}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'Markdown Office'
        jvmArgs = ['--add-opens', 'java.base/java.lang=com.github.samuele0.markdownoffice.merged.module', '--module-path', '$DIR/../plugins/*']

    }
    forceMerge('log4j-api')
    //javaHome = "/usr/lib/jvm/default/"
}
applicationDefaultJvmArgs = ['--add-opens', 'java.base/java.lang=com.google.guice']
if (System.getenv("githubtoken") != null)
    githubRelease {
        token System.getenv("githubtoken")// This is your personal access token with Repo permissions
        // You get this from your user settings > developer settings
        // If this value is not set, a login dialog will prompt you for your credentials.
        // 2fa is not supported
        owner "samuele0"
        // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
        repo "Markdown-Office" // by default this is set to your project name
        tagName "CI-${System.properties['os.detected.name']}" // by default this is set to "v${project.version}"
        targetCommitish "master" // by default this is set to "master"
        releaseName "CI-${System.properties['os.detected.name']}"
        // Release title, by default this is the same as the tagName
        body "" // by default this is empty
        draft false // by default this is false
        prerelease false // by default this is false
        releaseAssets project.file("${buildDir}/distributions/").listFiles()
        // this points to which files you want to upload as assets with your release
        overwrite true // by default false; if set to true, will delete an existing release with the same tag and name
        apiEndpoint "https://api.github.com" // should only change for github enterprise users
    }

tasks.githubRelease.doFirst {
    println("${buildDir}/distributions/")
    println(project.file("${buildDir}/distributions/").listFiles().length)
}